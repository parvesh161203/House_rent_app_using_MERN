{"ast":null,"code":"import { Keyframes } from '@ant-design/cssinjs';\nimport { resetComponent } from '../../style';\nimport { genComponentStyleHook, genPresetColor, mergeToken } from '../../theme/internal';\nconst antStatusProcessing = new Keyframes('antStatusProcessing', {\n  '0%': {\n    transform: 'scale(0.8)',\n    opacity: 0.5\n  },\n  '100%': {\n    transform: 'scale(2.4)',\n    opacity: 0\n  }\n});\nconst antZoomBadgeIn = new Keyframes('antZoomBadgeIn', {\n  '0%': {\n    transform: 'scale(0) translate(50%, -50%)',\n    opacity: 0\n  },\n  '100%': {\n    transform: 'scale(1) translate(50%, -50%)'\n  }\n});\nconst antZoomBadgeOut = new Keyframes('antZoomBadgeOut', {\n  '0%': {\n    transform: 'scale(1) translate(50%, -50%)'\n  },\n  '100%': {\n    transform: 'scale(0) translate(50%, -50%)',\n    opacity: 0\n  }\n});\nconst antNoWrapperZoomBadgeIn = new Keyframes('antNoWrapperZoomBadgeIn', {\n  '0%': {\n    transform: 'scale(0)',\n    opacity: 0\n  },\n  '100%': {\n    transform: 'scale(1)'\n  }\n});\nconst antNoWrapperZoomBadgeOut = new Keyframes('antNoWrapperZoomBadgeOut', {\n  '0%': {\n    transform: 'scale(1)'\n  },\n  '100%': {\n    transform: 'scale(0)',\n    opacity: 0\n  }\n});\nconst antBadgeLoadingCircle = new Keyframes('antBadgeLoadingCircle', {\n  '0%': {\n    transformOrigin: '50%'\n  },\n  '100%': {\n    transform: 'translate(50%, -50%) rotate(360deg)',\n    transformOrigin: '50%'\n  }\n});\nconst genSharedBadgeStyle = token => {\n  const {\n    componentCls,\n    iconCls,\n    antCls,\n    badgeFontHeight,\n    badgeShadowSize,\n    badgeHeightSm,\n    motionDurationSlow,\n    badgeStatusSize,\n    marginXS,\n    badgeRibbonOffset\n  } = token;\n  const numberPrefixCls = `${antCls}-scroll-number`;\n  const ribbonPrefixCls = `${antCls}-ribbon`;\n  const ribbonWrapperPrefixCls = `${antCls}-ribbon-wrapper`;\n  const colorPreset = genPresetColor(token, (colorKey, _ref) => {\n    let {\n      darkColor\n    } = _ref;\n    return {\n      [`&${componentCls} ${componentCls}-color-${colorKey}`]: {\n        background: darkColor,\n        [`&:not(${componentCls}-count)`]: {\n          color: darkColor\n        }\n      }\n    };\n  });\n  const statusRibbonPreset = genPresetColor(token, (colorKey, _ref2) => {\n    let {\n      darkColor\n    } = _ref2;\n    return {\n      [`&${ribbonPrefixCls}-color-${colorKey}`]: {\n        background: darkColor,\n        color: darkColor\n      }\n    };\n  });\n  return {\n    [componentCls]: Object.assign(Object.assign(Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'relative',\n      display: 'inline-block',\n      width: 'fit-content',\n      lineHeight: 1,\n      [`${componentCls}-count`]: {\n        zIndex: token.badgeZIndex,\n        minWidth: token.badgeHeight,\n        height: token.badgeHeight,\n        color: token.badgeTextColor,\n        fontWeight: token.badgeFontWeight,\n        fontSize: token.badgeFontSize,\n        lineHeight: `${token.badgeHeight}px`,\n        whiteSpace: 'nowrap',\n        textAlign: 'center',\n        background: token.badgeColor,\n        borderRadius: token.badgeHeight / 2,\n        boxShadow: `0 0 0 ${badgeShadowSize}px ${token.badgeShadowColor}`,\n        transition: `background ${token.motionDurationMid}`,\n        a: {\n          color: token.badgeTextColor\n        },\n        'a:hover': {\n          color: token.badgeTextColor\n        },\n        'a:hover &': {\n          background: token.badgeColorHover\n        }\n      },\n      [`${componentCls}-count-sm`]: {\n        minWidth: badgeHeightSm,\n        height: badgeHeightSm,\n        fontSize: token.badgeFontSizeSm,\n        lineHeight: `${badgeHeightSm}px`,\n        borderRadius: badgeHeightSm / 2\n      },\n      [`${componentCls}-multiple-words`]: {\n        padding: `0 ${token.paddingXS}px`\n      },\n      [`${componentCls}-dot`]: {\n        zIndex: token.badgeZIndex,\n        width: token.badgeDotSize,\n        minWidth: token.badgeDotSize,\n        height: token.badgeDotSize,\n        background: token.badgeColor,\n        borderRadius: '100%',\n        boxShadow: `0 0 0 ${badgeShadowSize}px ${token.badgeShadowColor}`\n      },\n      [`${componentCls}-dot${numberPrefixCls}`]: {\n        transition: `background ${motionDurationSlow}`\n      },\n      [`${componentCls}-count, ${componentCls}-dot, ${numberPrefixCls}-custom-component`]: {\n        position: 'absolute',\n        top: 0,\n        insetInlineEnd: 0,\n        transform: 'translate(50%, -50%)',\n        transformOrigin: '100% 0%',\n        [`&${iconCls}-spin`]: {\n          animationName: antBadgeLoadingCircle,\n          animationDuration: '1s',\n          animationIterationCount: 'infinite',\n          animationTimingFunction: 'linear'\n        }\n      },\n      [`&${componentCls}-status`]: {\n        lineHeight: 'inherit',\n        verticalAlign: 'baseline',\n        [`${componentCls}-status-dot`]: {\n          position: 'relative',\n          top: -1,\n          display: 'inline-block',\n          width: badgeStatusSize,\n          height: badgeStatusSize,\n          verticalAlign: 'middle',\n          borderRadius: '50%'\n        },\n        [`${componentCls}-status-success`]: {\n          backgroundColor: token.colorSuccess\n        },\n        [`${componentCls}-status-processing`]: {\n          overflow: 'visible',\n          color: token.colorPrimary,\n          backgroundColor: token.colorPrimary,\n          '&::after': {\n            position: 'absolute',\n            top: 0,\n            insetInlineStart: 0,\n            width: '100%',\n            height: '100%',\n            borderWidth: badgeShadowSize,\n            borderStyle: 'solid',\n            borderColor: 'inherit',\n            borderRadius: '50%',\n            animationName: antStatusProcessing,\n            animationDuration: token.badgeProcessingDuration,\n            animationIterationCount: 'infinite',\n            animationTimingFunction: 'ease-in-out',\n            content: '\"\"'\n          }\n        },\n        [`${componentCls}-status-default`]: {\n          backgroundColor: token.colorTextPlaceholder\n        },\n        [`${componentCls}-status-error`]: {\n          backgroundColor: token.colorError\n        },\n        [`${componentCls}-status-warning`]: {\n          backgroundColor: token.colorWarning\n        },\n        [`${componentCls}-status-text`]: {\n          marginInlineStart: marginXS,\n          color: token.colorText,\n          fontSize: token.fontSize\n        }\n      }\n    }), colorPreset), {\n      [`${componentCls}-zoom-appear, ${componentCls}-zoom-enter`]: {\n        animationName: antZoomBadgeIn,\n        animationDuration: token.motionDurationSlow,\n        animationTimingFunction: token.motionEaseOutBack,\n        animationFillMode: 'both'\n      },\n      [`${componentCls}-zoom-leave`]: {\n        animationName: antZoomBadgeOut,\n        animationDuration: token.motionDurationSlow,\n        animationTimingFunction: token.motionEaseOutBack,\n        animationFillMode: 'both'\n      },\n      [`&${componentCls}-not-a-wrapper`]: {\n        [`${componentCls}-zoom-appear, ${componentCls}-zoom-enter`]: {\n          animationName: antNoWrapperZoomBadgeIn,\n          animationDuration: token.motionDurationSlow,\n          animationTimingFunction: token.motionEaseOutBack\n        },\n        [`${componentCls}-zoom-leave`]: {\n          animationName: antNoWrapperZoomBadgeOut,\n          animationDuration: token.motionDurationSlow,\n          animationTimingFunction: token.motionEaseOutBack\n        },\n        [`&:not(${componentCls}-status)`]: {\n          verticalAlign: 'middle'\n        },\n        [`${numberPrefixCls}-custom-component, ${componentCls}-count`]: {\n          transform: 'none'\n        },\n        [`${numberPrefixCls}-custom-component, ${numberPrefixCls}`]: {\n          position: 'relative',\n          top: 'auto',\n          display: 'block',\n          transformOrigin: '50% 50%'\n        }\n      },\n      [`${numberPrefixCls}`]: {\n        overflow: 'hidden',\n        [`${numberPrefixCls}-only`]: {\n          position: 'relative',\n          display: 'inline-block',\n          height: token.badgeHeight,\n          transition: `all ${token.motionDurationSlow} ${token.motionEaseOutBack}`,\n          WebkitTransformStyle: 'preserve-3d',\n          WebkitBackfaceVisibility: 'hidden',\n          [`> p${numberPrefixCls}-only-unit`]: {\n            height: token.badgeHeight,\n            margin: 0,\n            WebkitTransformStyle: 'preserve-3d',\n            WebkitBackfaceVisibility: 'hidden'\n          }\n        },\n        [`${numberPrefixCls}-symbol`]: {\n          verticalAlign: 'top'\n        }\n      },\n      // ====================== RTL =======================\n      '&-rtl': {\n        direction: 'rtl',\n        [`${componentCls}-count, ${componentCls}-dot, ${numberPrefixCls}-custom-component`]: {\n          transform: 'translate(-50%, -50%)'\n        }\n      }\n    }),\n    [`${ribbonWrapperPrefixCls}`]: {\n      position: 'relative'\n    },\n    [`${ribbonPrefixCls}`]: Object.assign(Object.assign(Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'absolute',\n      top: marginXS,\n      padding: `0 ${token.paddingXS}px`,\n      color: token.colorPrimary,\n      lineHeight: `${badgeFontHeight}px`,\n      whiteSpace: 'nowrap',\n      backgroundColor: token.colorPrimary,\n      borderRadius: token.borderRadiusSM,\n      [`${ribbonPrefixCls}-text`]: {\n        color: token.colorTextLightSolid\n      },\n      [`${ribbonPrefixCls}-corner`]: {\n        position: 'absolute',\n        top: '100%',\n        width: badgeRibbonOffset,\n        height: badgeRibbonOffset,\n        color: 'currentcolor',\n        border: `${badgeRibbonOffset / 2}px solid`,\n        transform: token.badgeRibbonCornerTransform,\n        transformOrigin: 'top',\n        filter: token.badgeRibbonCornerFilter\n      }\n    }), statusRibbonPreset), {\n      [`&${ribbonPrefixCls}-placement-end`]: {\n        insetInlineEnd: -badgeRibbonOffset,\n        borderEndEndRadius: 0,\n        [`${ribbonPrefixCls}-corner`]: {\n          insetInlineEnd: 0,\n          borderInlineEndColor: 'transparent',\n          borderBlockEndColor: 'transparent'\n        }\n      },\n      [`&${ribbonPrefixCls}-placement-start`]: {\n        insetInlineStart: -badgeRibbonOffset,\n        borderEndStartRadius: 0,\n        [`${ribbonPrefixCls}-corner`]: {\n          insetInlineStart: 0,\n          borderBlockEndColor: 'transparent',\n          borderInlineStartColor: 'transparent'\n        }\n      },\n      // ====================== RTL =======================\n      '&-rtl': {\n        direction: 'rtl'\n      }\n    })\n  };\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Badge', token => {\n  const {\n    fontSize,\n    lineHeight,\n    fontSizeSM,\n    lineWidth,\n    marginXS,\n    colorBorderBg\n  } = token;\n  const badgeFontHeight = Math.round(fontSize * lineHeight);\n  const badgeShadowSize = lineWidth;\n  const badgeZIndex = 'auto';\n  const badgeHeight = badgeFontHeight - 2 * badgeShadowSize;\n  const badgeTextColor = token.colorBgContainer;\n  const badgeFontWeight = 'normal';\n  const badgeFontSize = fontSizeSM;\n  const badgeColor = token.colorError;\n  const badgeColorHover = token.colorErrorHover;\n  const badgeHeightSm = fontSize;\n  const badgeDotSize = fontSizeSM / 2;\n  const badgeFontSizeSm = fontSizeSM;\n  const badgeStatusSize = fontSizeSM / 2;\n  const badgeToken = mergeToken(token, {\n    badgeFontHeight,\n    badgeShadowSize,\n    badgeZIndex,\n    badgeHeight,\n    badgeTextColor,\n    badgeFontWeight,\n    badgeFontSize,\n    badgeColor,\n    badgeColorHover,\n    badgeShadowColor: colorBorderBg,\n    badgeHeightSm,\n    badgeDotSize,\n    badgeFontSizeSm,\n    badgeStatusSize,\n    badgeProcessingDuration: '1.2s',\n    badgeRibbonOffset: marginXS,\n    // Follow token just by Design. Not related with token\n    badgeRibbonCornerTransform: 'scaleY(0.75)',\n    badgeRibbonCornerFilter: `brightness(75%)`\n  });\n  return [genSharedBadgeStyle(badgeToken)];\n});","map":{"version":3,"names":["Keyframes","resetComponent","genComponentStyleHook","genPresetColor","mergeToken","antStatusProcessing","transform","opacity","antZoomBadgeIn","antZoomBadgeOut","antNoWrapperZoomBadgeIn","antNoWrapperZoomBadgeOut","antBadgeLoadingCircle","transformOrigin","genSharedBadgeStyle","token","componentCls","iconCls","antCls","badgeFontHeight","badgeShadowSize","badgeHeightSm","motionDurationSlow","badgeStatusSize","marginXS","badgeRibbonOffset","numberPrefixCls","ribbonPrefixCls","ribbonWrapperPrefixCls","colorPreset","colorKey","_ref","darkColor","background","color","statusRibbonPreset","_ref2","Object","assign","position","display","width","lineHeight","zIndex","badgeZIndex","minWidth","badgeHeight","height","badgeTextColor","fontWeight","badgeFontWeight","fontSize","badgeFontSize","whiteSpace","textAlign","badgeColor","borderRadius","boxShadow","badgeShadowColor","transition","motionDurationMid","a","badgeColorHover","badgeFontSizeSm","padding","paddingXS","badgeDotSize","top","insetInlineEnd","animationName","animationDuration","animationIterationCount","animationTimingFunction","verticalAlign","backgroundColor","colorSuccess","overflow","colorPrimary","insetInlineStart","borderWidth","borderStyle","borderColor","badgeProcessingDuration","content","colorTextPlaceholder","colorError","colorWarning","marginInlineStart","colorText","motionEaseOutBack","animationFillMode","WebkitTransformStyle","WebkitBackfaceVisibility","margin","direction","borderRadiusSM","colorTextLightSolid","border","badgeRibbonCornerTransform","filter","badgeRibbonCornerFilter","borderEndEndRadius","borderInlineEndColor","borderBlockEndColor","borderEndStartRadius","borderInlineStartColor","fontSizeSM","lineWidth","colorBorderBg","Math","round","colorBgContainer","colorErrorHover","badgeToken"],"sources":["C:/Users/karup/Downloads/HOUSE-RENT-APP-USING-MERN-main/HOUSE-RENT-APP-USING-MERN-main/code/frontend/node_modules/antd/es/badge/style/index.js"],"sourcesContent":["import { Keyframes } from '@ant-design/cssinjs';\nimport { resetComponent } from '../../style';\nimport { genComponentStyleHook, genPresetColor, mergeToken } from '../../theme/internal';\nconst antStatusProcessing = new Keyframes('antStatusProcessing', {\n  '0%': {\n    transform: 'scale(0.8)',\n    opacity: 0.5\n  },\n  '100%': {\n    transform: 'scale(2.4)',\n    opacity: 0\n  }\n});\nconst antZoomBadgeIn = new Keyframes('antZoomBadgeIn', {\n  '0%': {\n    transform: 'scale(0) translate(50%, -50%)',\n    opacity: 0\n  },\n  '100%': {\n    transform: 'scale(1) translate(50%, -50%)'\n  }\n});\nconst antZoomBadgeOut = new Keyframes('antZoomBadgeOut', {\n  '0%': {\n    transform: 'scale(1) translate(50%, -50%)'\n  },\n  '100%': {\n    transform: 'scale(0) translate(50%, -50%)',\n    opacity: 0\n  }\n});\nconst antNoWrapperZoomBadgeIn = new Keyframes('antNoWrapperZoomBadgeIn', {\n  '0%': {\n    transform: 'scale(0)',\n    opacity: 0\n  },\n  '100%': {\n    transform: 'scale(1)'\n  }\n});\nconst antNoWrapperZoomBadgeOut = new Keyframes('antNoWrapperZoomBadgeOut', {\n  '0%': {\n    transform: 'scale(1)'\n  },\n  '100%': {\n    transform: 'scale(0)',\n    opacity: 0\n  }\n});\nconst antBadgeLoadingCircle = new Keyframes('antBadgeLoadingCircle', {\n  '0%': {\n    transformOrigin: '50%'\n  },\n  '100%': {\n    transform: 'translate(50%, -50%) rotate(360deg)',\n    transformOrigin: '50%'\n  }\n});\nconst genSharedBadgeStyle = token => {\n  const {\n    componentCls,\n    iconCls,\n    antCls,\n    badgeFontHeight,\n    badgeShadowSize,\n    badgeHeightSm,\n    motionDurationSlow,\n    badgeStatusSize,\n    marginXS,\n    badgeRibbonOffset\n  } = token;\n  const numberPrefixCls = `${antCls}-scroll-number`;\n  const ribbonPrefixCls = `${antCls}-ribbon`;\n  const ribbonWrapperPrefixCls = `${antCls}-ribbon-wrapper`;\n  const colorPreset = genPresetColor(token, (colorKey, _ref) => {\n    let {\n      darkColor\n    } = _ref;\n    return {\n      [`&${componentCls} ${componentCls}-color-${colorKey}`]: {\n        background: darkColor,\n        [`&:not(${componentCls}-count)`]: {\n          color: darkColor\n        }\n      }\n    };\n  });\n  const statusRibbonPreset = genPresetColor(token, (colorKey, _ref2) => {\n    let {\n      darkColor\n    } = _ref2;\n    return {\n      [`&${ribbonPrefixCls}-color-${colorKey}`]: {\n        background: darkColor,\n        color: darkColor\n      }\n    };\n  });\n  return {\n    [componentCls]: Object.assign(Object.assign(Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'relative',\n      display: 'inline-block',\n      width: 'fit-content',\n      lineHeight: 1,\n      [`${componentCls}-count`]: {\n        zIndex: token.badgeZIndex,\n        minWidth: token.badgeHeight,\n        height: token.badgeHeight,\n        color: token.badgeTextColor,\n        fontWeight: token.badgeFontWeight,\n        fontSize: token.badgeFontSize,\n        lineHeight: `${token.badgeHeight}px`,\n        whiteSpace: 'nowrap',\n        textAlign: 'center',\n        background: token.badgeColor,\n        borderRadius: token.badgeHeight / 2,\n        boxShadow: `0 0 0 ${badgeShadowSize}px ${token.badgeShadowColor}`,\n        transition: `background ${token.motionDurationMid}`,\n        a: {\n          color: token.badgeTextColor\n        },\n        'a:hover': {\n          color: token.badgeTextColor\n        },\n        'a:hover &': {\n          background: token.badgeColorHover\n        }\n      },\n      [`${componentCls}-count-sm`]: {\n        minWidth: badgeHeightSm,\n        height: badgeHeightSm,\n        fontSize: token.badgeFontSizeSm,\n        lineHeight: `${badgeHeightSm}px`,\n        borderRadius: badgeHeightSm / 2\n      },\n      [`${componentCls}-multiple-words`]: {\n        padding: `0 ${token.paddingXS}px`\n      },\n      [`${componentCls}-dot`]: {\n        zIndex: token.badgeZIndex,\n        width: token.badgeDotSize,\n        minWidth: token.badgeDotSize,\n        height: token.badgeDotSize,\n        background: token.badgeColor,\n        borderRadius: '100%',\n        boxShadow: `0 0 0 ${badgeShadowSize}px ${token.badgeShadowColor}`\n      },\n      [`${componentCls}-dot${numberPrefixCls}`]: {\n        transition: `background ${motionDurationSlow}`\n      },\n      [`${componentCls}-count, ${componentCls}-dot, ${numberPrefixCls}-custom-component`]: {\n        position: 'absolute',\n        top: 0,\n        insetInlineEnd: 0,\n        transform: 'translate(50%, -50%)',\n        transformOrigin: '100% 0%',\n        [`&${iconCls}-spin`]: {\n          animationName: antBadgeLoadingCircle,\n          animationDuration: '1s',\n          animationIterationCount: 'infinite',\n          animationTimingFunction: 'linear'\n        }\n      },\n      [`&${componentCls}-status`]: {\n        lineHeight: 'inherit',\n        verticalAlign: 'baseline',\n        [`${componentCls}-status-dot`]: {\n          position: 'relative',\n          top: -1,\n          display: 'inline-block',\n          width: badgeStatusSize,\n          height: badgeStatusSize,\n          verticalAlign: 'middle',\n          borderRadius: '50%'\n        },\n        [`${componentCls}-status-success`]: {\n          backgroundColor: token.colorSuccess\n        },\n        [`${componentCls}-status-processing`]: {\n          overflow: 'visible',\n          color: token.colorPrimary,\n          backgroundColor: token.colorPrimary,\n          '&::after': {\n            position: 'absolute',\n            top: 0,\n            insetInlineStart: 0,\n            width: '100%',\n            height: '100%',\n            borderWidth: badgeShadowSize,\n            borderStyle: 'solid',\n            borderColor: 'inherit',\n            borderRadius: '50%',\n            animationName: antStatusProcessing,\n            animationDuration: token.badgeProcessingDuration,\n            animationIterationCount: 'infinite',\n            animationTimingFunction: 'ease-in-out',\n            content: '\"\"'\n          }\n        },\n        [`${componentCls}-status-default`]: {\n          backgroundColor: token.colorTextPlaceholder\n        },\n        [`${componentCls}-status-error`]: {\n          backgroundColor: token.colorError\n        },\n        [`${componentCls}-status-warning`]: {\n          backgroundColor: token.colorWarning\n        },\n        [`${componentCls}-status-text`]: {\n          marginInlineStart: marginXS,\n          color: token.colorText,\n          fontSize: token.fontSize\n        }\n      }\n    }), colorPreset), {\n      [`${componentCls}-zoom-appear, ${componentCls}-zoom-enter`]: {\n        animationName: antZoomBadgeIn,\n        animationDuration: token.motionDurationSlow,\n        animationTimingFunction: token.motionEaseOutBack,\n        animationFillMode: 'both'\n      },\n      [`${componentCls}-zoom-leave`]: {\n        animationName: antZoomBadgeOut,\n        animationDuration: token.motionDurationSlow,\n        animationTimingFunction: token.motionEaseOutBack,\n        animationFillMode: 'both'\n      },\n      [`&${componentCls}-not-a-wrapper`]: {\n        [`${componentCls}-zoom-appear, ${componentCls}-zoom-enter`]: {\n          animationName: antNoWrapperZoomBadgeIn,\n          animationDuration: token.motionDurationSlow,\n          animationTimingFunction: token.motionEaseOutBack\n        },\n        [`${componentCls}-zoom-leave`]: {\n          animationName: antNoWrapperZoomBadgeOut,\n          animationDuration: token.motionDurationSlow,\n          animationTimingFunction: token.motionEaseOutBack\n        },\n        [`&:not(${componentCls}-status)`]: {\n          verticalAlign: 'middle'\n        },\n        [`${numberPrefixCls}-custom-component, ${componentCls}-count`]: {\n          transform: 'none'\n        },\n        [`${numberPrefixCls}-custom-component, ${numberPrefixCls}`]: {\n          position: 'relative',\n          top: 'auto',\n          display: 'block',\n          transformOrigin: '50% 50%'\n        }\n      },\n      [`${numberPrefixCls}`]: {\n        overflow: 'hidden',\n        [`${numberPrefixCls}-only`]: {\n          position: 'relative',\n          display: 'inline-block',\n          height: token.badgeHeight,\n          transition: `all ${token.motionDurationSlow} ${token.motionEaseOutBack}`,\n          WebkitTransformStyle: 'preserve-3d',\n          WebkitBackfaceVisibility: 'hidden',\n          [`> p${numberPrefixCls}-only-unit`]: {\n            height: token.badgeHeight,\n            margin: 0,\n            WebkitTransformStyle: 'preserve-3d',\n            WebkitBackfaceVisibility: 'hidden'\n          }\n        },\n        [`${numberPrefixCls}-symbol`]: {\n          verticalAlign: 'top'\n        }\n      },\n      // ====================== RTL =======================\n      '&-rtl': {\n        direction: 'rtl',\n        [`${componentCls}-count, ${componentCls}-dot, ${numberPrefixCls}-custom-component`]: {\n          transform: 'translate(-50%, -50%)'\n        }\n      }\n    }),\n    [`${ribbonWrapperPrefixCls}`]: {\n      position: 'relative'\n    },\n    [`${ribbonPrefixCls}`]: Object.assign(Object.assign(Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'absolute',\n      top: marginXS,\n      padding: `0 ${token.paddingXS}px`,\n      color: token.colorPrimary,\n      lineHeight: `${badgeFontHeight}px`,\n      whiteSpace: 'nowrap',\n      backgroundColor: token.colorPrimary,\n      borderRadius: token.borderRadiusSM,\n      [`${ribbonPrefixCls}-text`]: {\n        color: token.colorTextLightSolid\n      },\n      [`${ribbonPrefixCls}-corner`]: {\n        position: 'absolute',\n        top: '100%',\n        width: badgeRibbonOffset,\n        height: badgeRibbonOffset,\n        color: 'currentcolor',\n        border: `${badgeRibbonOffset / 2}px solid`,\n        transform: token.badgeRibbonCornerTransform,\n        transformOrigin: 'top',\n        filter: token.badgeRibbonCornerFilter\n      }\n    }), statusRibbonPreset), {\n      [`&${ribbonPrefixCls}-placement-end`]: {\n        insetInlineEnd: -badgeRibbonOffset,\n        borderEndEndRadius: 0,\n        [`${ribbonPrefixCls}-corner`]: {\n          insetInlineEnd: 0,\n          borderInlineEndColor: 'transparent',\n          borderBlockEndColor: 'transparent'\n        }\n      },\n      [`&${ribbonPrefixCls}-placement-start`]: {\n        insetInlineStart: -badgeRibbonOffset,\n        borderEndStartRadius: 0,\n        [`${ribbonPrefixCls}-corner`]: {\n          insetInlineStart: 0,\n          borderBlockEndColor: 'transparent',\n          borderInlineStartColor: 'transparent'\n        }\n      },\n      // ====================== RTL =======================\n      '&-rtl': {\n        direction: 'rtl'\n      }\n    })\n  };\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Badge', token => {\n  const {\n    fontSize,\n    lineHeight,\n    fontSizeSM,\n    lineWidth,\n    marginXS,\n    colorBorderBg\n  } = token;\n  const badgeFontHeight = Math.round(fontSize * lineHeight);\n  const badgeShadowSize = lineWidth;\n  const badgeZIndex = 'auto';\n  const badgeHeight = badgeFontHeight - 2 * badgeShadowSize;\n  const badgeTextColor = token.colorBgContainer;\n  const badgeFontWeight = 'normal';\n  const badgeFontSize = fontSizeSM;\n  const badgeColor = token.colorError;\n  const badgeColorHover = token.colorErrorHover;\n  const badgeHeightSm = fontSize;\n  const badgeDotSize = fontSizeSM / 2;\n  const badgeFontSizeSm = fontSizeSM;\n  const badgeStatusSize = fontSizeSM / 2;\n  const badgeToken = mergeToken(token, {\n    badgeFontHeight,\n    badgeShadowSize,\n    badgeZIndex,\n    badgeHeight,\n    badgeTextColor,\n    badgeFontWeight,\n    badgeFontSize,\n    badgeColor,\n    badgeColorHover,\n    badgeShadowColor: colorBorderBg,\n    badgeHeightSm,\n    badgeDotSize,\n    badgeFontSizeSm,\n    badgeStatusSize,\n    badgeProcessingDuration: '1.2s',\n    badgeRibbonOffset: marginXS,\n    // Follow token just by Design. Not related with token\n    badgeRibbonCornerTransform: 'scaleY(0.75)',\n    badgeRibbonCornerFilter: `brightness(75%)`\n  });\n  return [genSharedBadgeStyle(badgeToken)];\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}